name: Deploy to Production

on:
  workflow_run:
    workflows: ["Deploy to Stage"]
    branches: [main]
    types: 
      - completed
      
jobs:

  run-production-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # only runs if stage was approved and ran
    steps:
      - run: echo "Pretending to run some tests before stage deployment allowed..."

  deploy-production-infrastructure:
    needs: run-production-tests
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: production
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TF_API_SECRET }}

      - name: Terraform Format
        working-directory: ./infrastructure
        run: terraform fmt -check
      
      - name: Terraform Init
        working-directory: ./infrastructure
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: ./infrastructure
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        working-directory: ./infrastructure
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -var="workspace=$TF_WORKSPACE"

  deploy-to-production:
    needs: deploy-production-infrastructure
    runs-on: ubuntu-latest
    steps:
      - run: echo "Fake deployment to production"
